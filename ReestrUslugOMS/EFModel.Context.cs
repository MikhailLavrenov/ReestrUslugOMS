//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReestrUslugOMS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EFModel : DbContext
    {
        public EFModel(string connectionString)
            : base(connectionString)
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dbtFormula> dbtFormula { get; set; }
        public virtual DbSet<dbtNode> dbtNode { get; set; }
        public virtual DbSet<dbtUser> dbtUser { get; set; }
        public virtual DbSet<dbtPlan> dbtPlan { get; set; }
    
        public virtual ObjectResult<sp_ReportFactResult> sp_ReportFact(Nullable<int> month1, Nullable<int> god1, Nullable<int> month2, Nullable<int> god2, string mcod, Nullable<int> errId, Nullable<int> inoId)
        {
            var month1Parameter = month1.HasValue ?
                new ObjectParameter("month1", month1) :
                new ObjectParameter("month1", typeof(int));
    
            var god1Parameter = god1.HasValue ?
                new ObjectParameter("god1", god1) :
                new ObjectParameter("god1", typeof(int));
    
            var month2Parameter = month2.HasValue ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(int));
    
            var god2Parameter = god2.HasValue ?
                new ObjectParameter("god2", god2) :
                new ObjectParameter("god2", typeof(int));
    
            var mcodParameter = mcod != null ?
                new ObjectParameter("mcod", mcod) :
                new ObjectParameter("mcod", typeof(string));
    
            var errIdParameter = errId.HasValue ?
                new ObjectParameter("errId", errId) :
                new ObjectParameter("errId", typeof(int));
    
            var inoIdParameter = inoId.HasValue ?
                new ObjectParameter("inoId", inoId) :
                new ObjectParameter("inoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportFactResult>("sp_ReportFact", month1Parameter, god1Parameter, month2Parameter, god2Parameter, mcodParameter, errIdParameter, inoIdParameter);
        }
    }
}
